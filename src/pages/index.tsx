import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import { RouterOutputs, api } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();

  console.log(user);

  if (!user) {
    return null;
  }

  return (
    <div className="flex w-full gap-x-3">
      <img src={user.profileImageUrl} alt="profile image" className="w-14 h-14 rounded-full" />
      <input placeholder="Make a post..." className="grow bg-transparent outline-none pl-2" />
    </div>
  )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex items-center w-full gap-x-3 border-b border-slate-400 p-8" key={post.id}>
      <img src={author.profileImageUrl} alt="profile image" className="w-14 h-14 rounded-full" />
      <div className="flex flex-col">
        <p className="text-sm text-slate-300">{`@${author.username}`}</p>
        <p>{post.content}</p>
      </div>
    </div>
  );
}


export default function Home() {
  const { data, isLoading } = api.posts.getAll.useQuery();
  const user = useUser();

  if (isLoading) {
    return (
      <main className="h-screen flex justify-center">
        <p>Loading...</p>
      </main>
    );
  }

  // TODO Doesnt work?
  if (!data) {
    return (
      <main className="h-screen flex justify-center">
        <p>No data found. Maybe something went wrong?</p>
      </main>
    );
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen flex justify-center">
        <div className="w-full h-full border-x border-slate-400 md:max-w-2xl p-2">
          <div className="flex items-center border-b border-slate-400 p-4">
            <CreatePostWizard />
            <span className="ml-auto">
              {!user.isSignedIn && <SignInButton />}
              {!!user.isSignedIn && <SignOutButton />}
            </span>
          </div>
          <div className="flex flex-col">
            {data?.map((fullPost) => {
              return <PostView {...fullPost} key={fullPost.post.id} />
            })}
          </div>
        </div>
      </main>
    </>
  );
}
